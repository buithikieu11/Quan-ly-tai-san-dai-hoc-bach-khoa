#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QuanLyTaiSanDHBK.DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QLTSBK")]
	public partial class QLTSDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTaiSan(TaiSan instance);
    partial void UpdateTaiSan(TaiSan instance);
    partial void DeleteTaiSan(TaiSan instance);
    partial void InsertPhong(Phong instance);
    partial void UpdatePhong(Phong instance);
    partial void DeletePhong(Phong instance);
    partial void InsertLoaiTaiSan(LoaiTaiSan instance);
    partial void UpdateLoaiTaiSan(LoaiTaiSan instance);
    partial void DeleteLoaiTaiSan(LoaiTaiSan instance);
    partial void InsertKhoa(Khoa instance);
    partial void UpdateKhoa(Khoa instance);
    partial void DeleteKhoa(Khoa instance);
    partial void InsertChungTuGiam(ChungTuGiam instance);
    partial void UpdateChungTuGiam(ChungTuGiam instance);
    partial void DeleteChungTuGiam(ChungTuGiam instance);
    #endregion
		
		public QLTSDataContext() : 
				base(global::QuanLyTaiSanDHBK.Properties.Settings.Default.QLTSBKConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLTSDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTSDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTSDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLTSDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TaiSan> TaiSans
		{
			get
			{
				return this.GetTable<TaiSan>();
			}
		}
		
		public System.Data.Linq.Table<Phong> Phongs
		{
			get
			{
				return this.GetTable<Phong>();
			}
		}
		
		public System.Data.Linq.Table<LoaiTaiSan> LoaiTaiSans
		{
			get
			{
				return this.GetTable<LoaiTaiSan>();
			}
		}
		
		public System.Data.Linq.Table<Khoa> Khoas
		{
			get
			{
				return this.GetTable<Khoa>();
			}
		}
		
		public System.Data.Linq.Table<ChungTuGiam> ChungTuGiams
		{
			get
			{
				return this.GetTable<ChungTuGiam>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiSan")]
	public partial class TaiSan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTaiSan;
		
		private string _MaLoaiTaiSan;
		
		private string _MaPhong;
		
		private string _TenTaiSan;
		
		private string _MaChungTuTang;
		
		private string _ThongSoKyThuat;
		
		private System.Nullable<int> _ThanhTien;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<int> _SoLuongNhap;
		
		private System.Nullable<int> _TyLeHM;
		
		private System.Nullable<int> _TyLeCL;
		
		private System.Nullable<System.DateTime> _NgayGhiTang;
		
		private string _NoiDung;
		
		private string _GhiChu;
		
		private EntitySet<ChungTuGiam> _ChungTuGiams;
		
		private EntityRef<Phong> _Phong;
		
		private EntityRef<LoaiTaiSan> _LoaiTaiSan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTaiSanChanging(string value);
    partial void OnMaTaiSanChanged();
    partial void OnMaLoaiTaiSanChanging(string value);
    partial void OnMaLoaiTaiSanChanged();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnTenTaiSanChanging(string value);
    partial void OnTenTaiSanChanged();
    partial void OnMaChungTuTangChanging(string value);
    partial void OnMaChungTuTangChanged();
    partial void OnThongSoKyThuatChanging(string value);
    partial void OnThongSoKyThuatChanged();
    partial void OnThanhTienChanging(System.Nullable<int> value);
    partial void OnThanhTienChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnSoLuongNhapChanging(System.Nullable<int> value);
    partial void OnSoLuongNhapChanged();
    partial void OnTyLeHMChanging(System.Nullable<int> value);
    partial void OnTyLeHMChanged();
    partial void OnTyLeCLChanging(System.Nullable<int> value);
    partial void OnTyLeCLChanged();
    partial void OnNgayGhiTangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGhiTangChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public TaiSan()
		{
			this._ChungTuGiams = new EntitySet<ChungTuGiam>(new Action<ChungTuGiam>(this.attach_ChungTuGiams), new Action<ChungTuGiam>(this.detach_ChungTuGiams));
			this._Phong = default(EntityRef<Phong>);
			this._LoaiTaiSan = default(EntityRef<LoaiTaiSan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTaiSan", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTaiSan
		{
			get
			{
				return this._MaTaiSan;
			}
			set
			{
				if ((this._MaTaiSan != value))
				{
					this.OnMaTaiSanChanging(value);
					this.SendPropertyChanging();
					this._MaTaiSan = value;
					this.SendPropertyChanged("MaTaiSan");
					this.OnMaTaiSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiTaiSan", DbType="NVarChar(50)")]
		public string MaLoaiTaiSan
		{
			get
			{
				return this._MaLoaiTaiSan;
			}
			set
			{
				if ((this._MaLoaiTaiSan != value))
				{
					if (this._LoaiTaiSan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaLoaiTaiSanChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiTaiSan = value;
					this.SendPropertyChanged("MaLoaiTaiSan");
					this.OnMaLoaiTaiSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="NVarChar(50)")]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTaiSan", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTaiSan
		{
			get
			{
				return this._TenTaiSan;
			}
			set
			{
				if ((this._TenTaiSan != value))
				{
					this.OnTenTaiSanChanging(value);
					this.SendPropertyChanging();
					this._TenTaiSan = value;
					this.SendPropertyChanged("TenTaiSan");
					this.OnTenTaiSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChungTuTang", DbType="NVarChar(50)")]
		public string MaChungTuTang
		{
			get
			{
				return this._MaChungTuTang;
			}
			set
			{
				if ((this._MaChungTuTang != value))
				{
					this.OnMaChungTuTangChanging(value);
					this.SendPropertyChanging();
					this._MaChungTuTang = value;
					this.SendPropertyChanged("MaChungTuTang");
					this.OnMaChungTuTangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThongSoKyThuat", DbType="NVarChar(50)")]
		public string ThongSoKyThuat
		{
			get
			{
				return this._ThongSoKyThuat;
			}
			set
			{
				if ((this._ThongSoKyThuat != value))
				{
					this.OnThongSoKyThuatChanging(value);
					this.SendPropertyChanging();
					this._ThongSoKyThuat = value;
					this.SendPropertyChanged("ThongSoKyThuat");
					this.OnThongSoKyThuatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int")]
		public System.Nullable<int> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongNhap", DbType="Int")]
		public System.Nullable<int> SoLuongNhap
		{
			get
			{
				return this._SoLuongNhap;
			}
			set
			{
				if ((this._SoLuongNhap != value))
				{
					this.OnSoLuongNhapChanging(value);
					this.SendPropertyChanging();
					this._SoLuongNhap = value;
					this.SendPropertyChanged("SoLuongNhap");
					this.OnSoLuongNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TyLeHM", DbType="Int")]
		public System.Nullable<int> TyLeHM
		{
			get
			{
				return this._TyLeHM;
			}
			set
			{
				if ((this._TyLeHM != value))
				{
					this.OnTyLeHMChanging(value);
					this.SendPropertyChanging();
					this._TyLeHM = value;
					this.SendPropertyChanged("TyLeHM");
					this.OnTyLeHMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TyLeCL", DbType="Int")]
		public System.Nullable<int> TyLeCL
		{
			get
			{
				return this._TyLeCL;
			}
			set
			{
				if ((this._TyLeCL != value))
				{
					this.OnTyLeCLChanging(value);
					this.SendPropertyChanging();
					this._TyLeCL = value;
					this.SendPropertyChanged("TyLeCL");
					this.OnTyLeCLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGhiTang", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayGhiTang
		{
			get
			{
				return this._NgayGhiTang;
			}
			set
			{
				if ((this._NgayGhiTang != value))
				{
					this.OnNgayGhiTangChanging(value);
					this.SendPropertyChanging();
					this._NgayGhiTang = value;
					this.SendPropertyChanged("NgayGhiTang");
					this.OnNgayGhiTangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(50)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiSan_ChungTuGiam", Storage="_ChungTuGiams", ThisKey="MaTaiSan", OtherKey="MaTaiSan")]
		public EntitySet<ChungTuGiam> ChungTuGiams
		{
			get
			{
				return this._ChungTuGiams;
			}
			set
			{
				this._ChungTuGiams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_TaiSan", Storage="_Phong", ThisKey="MaPhong", OtherKey="MaPhong", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.TaiSans.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.TaiSans.Add(this);
						this._MaPhong = value.MaPhong;
					}
					else
					{
						this._MaPhong = default(string);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTaiSan_TaiSan", Storage="_LoaiTaiSan", ThisKey="MaLoaiTaiSan", OtherKey="MaLoaiTaiSan", IsForeignKey=true)]
		public LoaiTaiSan LoaiTaiSan
		{
			get
			{
				return this._LoaiTaiSan.Entity;
			}
			set
			{
				LoaiTaiSan previousValue = this._LoaiTaiSan.Entity;
				if (((previousValue != value) 
							|| (this._LoaiTaiSan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LoaiTaiSan.Entity = null;
						previousValue.TaiSans.Remove(this);
					}
					this._LoaiTaiSan.Entity = value;
					if ((value != null))
					{
						value.TaiSans.Add(this);
						this._MaLoaiTaiSan = value.MaLoaiTaiSan;
					}
					else
					{
						this._MaLoaiTaiSan = default(string);
					}
					this.SendPropertyChanged("LoaiTaiSan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChungTuGiams(ChungTuGiam entity)
		{
			this.SendPropertyChanging();
			entity.TaiSan = this;
		}
		
		private void detach_ChungTuGiams(ChungTuGiam entity)
		{
			this.SendPropertyChanging();
			entity.TaiSan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phong")]
	public partial class Phong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaPhong;
		
		private string _TenPhong;
		
		private string _MaKhoa;
		
		private EntitySet<TaiSan> _TaiSans;
		
		private EntityRef<Khoa> _Khoa;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaPhongChanging(string value);
    partial void OnMaPhongChanged();
    partial void OnTenPhongChanging(string value);
    partial void OnTenPhongChanged();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    #endregion
		
		public Phong()
		{
			this._TaiSans = new EntitySet<TaiSan>(new Action<TaiSan>(this.attach_TaiSans), new Action<TaiSan>(this.detach_TaiSans));
			this._Khoa = default(EntityRef<Khoa>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaPhong", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaPhong
		{
			get
			{
				return this._MaPhong;
			}
			set
			{
				if ((this._MaPhong != value))
				{
					this.OnMaPhongChanging(value);
					this.SendPropertyChanging();
					this._MaPhong = value;
					this.SendPropertyChanged("MaPhong");
					this.OnMaPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhong", DbType="NVarChar(50)")]
		public string TenPhong
		{
			get
			{
				return this._TenPhong;
			}
			set
			{
				if ((this._TenPhong != value))
				{
					this.OnTenPhongChanging(value);
					this.SendPropertyChanging();
					this._TenPhong = value;
					this.SendPropertyChanged("TenPhong");
					this.OnTenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="NVarChar(50)")]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					if (this._Khoa.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_TaiSan", Storage="_TaiSans", ThisKey="MaPhong", OtherKey="MaPhong")]
		public EntitySet<TaiSan> TaiSans
		{
			get
			{
				return this._TaiSans;
			}
			set
			{
				this._TaiSans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_Phong", Storage="_Khoa", ThisKey="MaKhoa", OtherKey="MaKhoa", IsForeignKey=true)]
		public Khoa Khoa
		{
			get
			{
				return this._Khoa.Entity;
			}
			set
			{
				Khoa previousValue = this._Khoa.Entity;
				if (((previousValue != value) 
							|| (this._Khoa.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khoa.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._Khoa.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._MaKhoa = value.MaKhoa;
					}
					else
					{
						this._MaKhoa = default(string);
					}
					this.SendPropertyChanged("Khoa");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiSans(TaiSan entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_TaiSans(TaiSan entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoaiTaiSan")]
	public partial class LoaiTaiSan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaLoaiTaiSan;
		
		private string _TenLoaiTaiSan;
		
		private EntitySet<TaiSan> _TaiSans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLoaiTaiSanChanging(string value);
    partial void OnMaLoaiTaiSanChanged();
    partial void OnTenLoaiTaiSanChanging(string value);
    partial void OnTenLoaiTaiSanChanged();
    #endregion
		
		public LoaiTaiSan()
		{
			this._TaiSans = new EntitySet<TaiSan>(new Action<TaiSan>(this.attach_TaiSans), new Action<TaiSan>(this.detach_TaiSans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLoaiTaiSan", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaLoaiTaiSan
		{
			get
			{
				return this._MaLoaiTaiSan;
			}
			set
			{
				if ((this._MaLoaiTaiSan != value))
				{
					this.OnMaLoaiTaiSanChanging(value);
					this.SendPropertyChanging();
					this._MaLoaiTaiSan = value;
					this.SendPropertyChanged("MaLoaiTaiSan");
					this.OnMaLoaiTaiSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLoaiTaiSan", DbType="NVarChar(50)")]
		public string TenLoaiTaiSan
		{
			get
			{
				return this._TenLoaiTaiSan;
			}
			set
			{
				if ((this._TenLoaiTaiSan != value))
				{
					this.OnTenLoaiTaiSanChanging(value);
					this.SendPropertyChanging();
					this._TenLoaiTaiSan = value;
					this.SendPropertyChanged("TenLoaiTaiSan");
					this.OnTenLoaiTaiSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LoaiTaiSan_TaiSan", Storage="_TaiSans", ThisKey="MaLoaiTaiSan", OtherKey="MaLoaiTaiSan")]
		public EntitySet<TaiSan> TaiSans
		{
			get
			{
				return this._TaiSans;
			}
			set
			{
				this._TaiSans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TaiSans(TaiSan entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTaiSan = this;
		}
		
		private void detach_TaiSans(TaiSan entity)
		{
			this.SendPropertyChanging();
			entity.LoaiTaiSan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khoa")]
	public partial class Khoa : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKhoa;
		
		private string _TenKhoa;
		
		private EntitySet<Phong> _Phongs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhoaChanging(string value);
    partial void OnMaKhoaChanged();
    partial void OnTenKhoaChanging(string value);
    partial void OnTenKhoaChanged();
    #endregion
		
		public Khoa()
		{
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKhoa", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKhoa
		{
			get
			{
				return this._MaKhoa;
			}
			set
			{
				if ((this._MaKhoa != value))
				{
					this.OnMaKhoaChanging(value);
					this.SendPropertyChanging();
					this._MaKhoa = value;
					this.SendPropertyChanged("MaKhoa");
					this.OnMaKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhoa", DbType="NVarChar(50)")]
		public string TenKhoa
		{
			get
			{
				return this._TenKhoa;
			}
			set
			{
				if ((this._TenKhoa != value))
				{
					this.OnTenKhoaChanging(value);
					this.SendPropertyChanging();
					this._TenKhoa = value;
					this.SendPropertyChanged("TenKhoa");
					this.OnTenKhoaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khoa_Phong", Storage="_Phongs", ThisKey="MaKhoa", OtherKey="MaKhoa")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.Khoa = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChungTuGiam")]
	public partial class ChungTuGiam : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaChungTuGiam;
		
		private string _MaTaiSan;
		
		private System.Nullable<int> _SoLuong;
		
		private System.Nullable<System.DateTime> _NgayGhiGiam;
		
		private System.Nullable<int> _ThanhTien;
		
		private string _NoiDung;
		
		private string _GhiChu;
		
		private EntityRef<TaiSan> _TaiSan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChungTuGiamChanging(string value);
    partial void OnMaChungTuGiamChanged();
    partial void OnMaTaiSanChanging(string value);
    partial void OnMaTaiSanChanged();
    partial void OnSoLuongChanging(System.Nullable<int> value);
    partial void OnSoLuongChanged();
    partial void OnNgayGhiGiamChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayGhiGiamChanged();
    partial void OnThanhTienChanging(System.Nullable<int> value);
    partial void OnThanhTienChanged();
    partial void OnNoiDungChanging(string value);
    partial void OnNoiDungChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
		
		public ChungTuGiam()
		{
			this._TaiSan = default(EntityRef<TaiSan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaChungTuGiam", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaChungTuGiam
		{
			get
			{
				return this._MaChungTuGiam;
			}
			set
			{
				if ((this._MaChungTuGiam != value))
				{
					this.OnMaChungTuGiamChanging(value);
					this.SendPropertyChanging();
					this._MaChungTuGiam = value;
					this.SendPropertyChanged("MaChungTuGiam");
					this.OnMaChungTuGiamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTaiSan", DbType="NVarChar(50)")]
		public string MaTaiSan
		{
			get
			{
				return this._MaTaiSan;
			}
			set
			{
				if ((this._MaTaiSan != value))
				{
					if (this._TaiSan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTaiSanChanging(value);
					this.SendPropertyChanging();
					this._MaTaiSan = value;
					this.SendPropertyChanged("MaTaiSan");
					this.OnMaTaiSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int")]
		public System.Nullable<int> SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayGhiGiam", DbType="DateTime")]
		public System.Nullable<System.DateTime> NgayGhiGiam
		{
			get
			{
				return this._NgayGhiGiam;
			}
			set
			{
				if ((this._NgayGhiGiam != value))
				{
					this.OnNgayGhiGiamChanging(value);
					this.SendPropertyChanging();
					this._NgayGhiGiam = value;
					this.SendPropertyChanged("NgayGhiGiam");
					this.OnNgayGhiGiamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThanhTien", DbType="Int")]
		public System.Nullable<int> ThanhTien
		{
			get
			{
				return this._ThanhTien;
			}
			set
			{
				if ((this._ThanhTien != value))
				{
					this.OnThanhTienChanging(value);
					this.SendPropertyChanging();
					this._ThanhTien = value;
					this.SendPropertyChanged("ThanhTien");
					this.OnThanhTienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoiDung", DbType="NVarChar(50)")]
		public string NoiDung
		{
			get
			{
				return this._NoiDung;
			}
			set
			{
				if ((this._NoiDung != value))
				{
					this.OnNoiDungChanging(value);
					this.SendPropertyChanging();
					this._NoiDung = value;
					this.SendPropertyChanged("NoiDung");
					this.OnNoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(50)")]
		public string GhiChu
		{
			get
			{
				return this._GhiChu;
			}
			set
			{
				if ((this._GhiChu != value))
				{
					this.OnGhiChuChanging(value);
					this.SendPropertyChanging();
					this._GhiChu = value;
					this.SendPropertyChanged("GhiChu");
					this.OnGhiChuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiSan_ChungTuGiam", Storage="_TaiSan", ThisKey="MaTaiSan", OtherKey="MaTaiSan", IsForeignKey=true)]
		public TaiSan TaiSan
		{
			get
			{
				return this._TaiSan.Entity;
			}
			set
			{
				TaiSan previousValue = this._TaiSan.Entity;
				if (((previousValue != value) 
							|| (this._TaiSan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiSan.Entity = null;
						previousValue.ChungTuGiams.Remove(this);
					}
					this._TaiSan.Entity = value;
					if ((value != null))
					{
						value.ChungTuGiams.Add(this);
						this._MaTaiSan = value.MaTaiSan;
					}
					else
					{
						this._MaTaiSan = default(string);
					}
					this.SendPropertyChanged("TaiSan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
